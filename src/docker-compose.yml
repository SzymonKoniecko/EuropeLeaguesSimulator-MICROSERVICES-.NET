version: '3.4'

services:
  mssql-container:
    image: mcr.microsoft.com/mssql/server
    container_name: mssql-container
    networks:
    - tmpNetwork
    environment:
      SA_PASSWORD: Zaq1@wsx 
      ACCEPT_EULA: Y
    ports:
      - "1433:1433"   # Mapowanie portu kontenera na port hosta

#  simulationengine.api:
#    image: ${DOCKER_REGISTRY-}simulationengineapi
#    build:
#      context: .
#      dockerfile: Services/SimulationEngine/SimulationEngine.API/Dockerfile
#    networks:
#    - tmpNetwork

#  tournament.api:
#    image: ${DOCKER_REGISTRY-}tournamentapi
#    build:
#      context: .
#      dockerfile: Services/Tournament.API/Tournament.API/Dockerfile
#    networks:
#    - tmpNetwork


  webscrapingintegration.api:
    image: ${DOCKER_REGISTRY-}webscrapingintegrationapi
    container_name: webscrapingintegrationapi
    build:
      context: .
      dockerfile: Services/WebScrapingIntegration/WebScrapingIntegration.API/Dockerfile
    networks:
    - tmpNetwork


#  settings.api:
#    image: ${DOCKER_REGISTRY-}settingsapi
#    build:
#      context: .
#      dockerfile: Services/Settings/Settings.API/Dockerfile
#    networks:
#    - tmpNetwork
#
#
#  result.api:
#    image: ${DOCKER_REGISTRY-}resultapi
#    build:
#      context: .
#      dockerfile: Services/Result/Result.API/Dockerfile
#    networks:
#    - tmpNetwork
#

  processmanager.api:
    container_name: processmanagerapi
    image: ${DOCKER_REGISTRY-}processmanagerapi
    build:
      context: .
      dockerfile: Services/ProcessManager/ProcessManager.API/Dockerfile
    networks:
    - tmpNetwork

#
#  matchmanagment.api:
#    image: ${DOCKER_REGISTRY-}matchmanagmentapi
#    build:
#      context: .
#      dockerfile: Services/MatchManagment/MatchManagment.API/Dockerfile
#    networks:
#    - tmpNetwork

  logger.api:
    container_name: loggerapi
    image: ${DOCKER_REGISTRY-}loggerapi
    build:
      context: .
      dockerfile: Services/Logger/Logger.API/Dockerfile
    environment:
    - DB_HOST=mssql-container
    - DB_NAME_LOGGER=Logger
    - DB_SA_PASSWORD=Zaq1@wsx
    networks:
    - tmpNetwork
  
    
    
    
    
  datahub.api:
    image: ${DOCKER_REGISTRY-}datahubapi
    container_name: datahubapi
    build:
      context: .
      dockerfile: Services/DataHub/DataHub.API/Dockerfile
    environment:
    - DB_HOST=mssql-container
    - DB_NAME_DATAHUB=DataHub
    - DB_SA_PASSWORD=Zaq1@wsx
    networks:
    - tmpNetwork


  datahubapigw:
    image: ${DOCKER_REGISTRY-}datahubapigw
    container_name: datahubapigw
    build:
      context: .
      dockerfile: ApiGateways/DataHubApiGw/Dockerfile
    networks:
    - tmpNetwork

  webscrapingintegrationgw:
    image: ${DOCKER_REGISTRY-}webscrapingintegrationgw
    container_name: webscrapingintegrationgw
    build:
      context: .
      dockerfile: ApiGateways/WebScrapingIntegrationGw/Dockerfile
    networks:
    - tmpNetwork

    
  redis:
    container_name: redis
    image: redis:latest
    restart: always
    command: redis-server --save 20 1 --loglevel warning --requirepass Zaq1@wsx
    networks:
    - tmpNetwork
    volumes: 
      - cache:/data


##  camunda:
##    image: camunda/camunda-bpm-platform:latest
##    container_name: camunda
##    ports:
##      - "8080:8080"
##    environment:
##      - CAMUNDA_BPM_DB_DRIVER=org.sqlserver.jdbc.Driver
##      - CAMUNDA_BPM_DB_URL=jdbc:sqlserver://mssql-container:1433;databaseName=ProcessManager
#      - CAMUNDA_BPM_DB_USERNAME=sa
#      - CAMUNDA_BPM_DB_PASSWORD=YourStrongMSSQLPassword
#      - CAMUNDA_ADMIN_USER=myadmin
#      - CAMUNDA_ADMIN_PASSWORD=mypassword
#    depends_on:
#    - mssql-container
#    networks:
#    - tmpNetwork
#  rabbitmq:
#    image: rabbitmq:3-management-alpine
#    container_name: 'rabbitmqServer'
#    ports:
#        - 5672:5672
#        - 15672:15672
#    volumes:
#        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
#        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
#    networks:
#        - tmpNetwork
#
#
#  



volumes:
    sql-data:
    cache:

networks:
  tmpNetwork:


